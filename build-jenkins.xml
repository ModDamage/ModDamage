<project name="Jenkins-BukkitPlugin" default="clean">
	
    <!-- START PREDEFINED -->
    <property environment="env"/>
	<property name="sourceFolder" location="src"/>
	<property name="buildFolder" location="bin"/>
	<property name="webBuildFolder" location="bin/web"/>
	<property name="dependencyFolder" location="resource"/>
    <!-- END PREDEFINED -->
	
	<target name="init">
		<tstamp/>
	    <mkdir dir="${buildFolder}"/>
	    <mkdir dir="${webBuildFolder}"/>
	</target>

	<target name="compile" depends="init" description="Compile class files">
		<echo message="Compiling source into ${buildFolder}..."/>
		<path id="project.classpath">
	        <fileset dir="${dependencyFolder}">
	            <include name="*.jar"/>
	        </fileset>
	    </path>
		<javac srcdir="${sourceFolder}" destdir="${buildFolder}" classpathref="project.classpath" source="1.6" target="1.6" debug="on" includeantruntime="false" />
		<echo>Copying webserver files for filtering...</echo>
		
		<copy todir="${webBuildFolder}" overwrite="true">
			<fileset dir="web">
                <exclude name="api/**"/>

                <!--Include Minimized Bootstrap Libraries.-->
                <include name="bootstrap/**/*.min.*"/>

                <!--Include Fonts-->
                <include name="bootstrap/fonts/*"/>

                <include name="**/*.min.js"/>
                <include name="**/*.min.js.map"/>

                <include name="bower_components/angular-ui-ace/ui-ace.js"/>
                <!--Bootstrap-->
                <exclude name="bower_components/angular-ui-bootstrap/**"/>
                <exclude name="bower_components/bootstrap/**"/>
                <include name="bower_components/bootstrap/dist/*.min.*"/>

                <include name="bower_components/angular-ui-bootstrap-bower/*.min.*"/>
                <include name="bower_components/angular-ui-ace/*.js"/>

                <!--Include all minified versions of files-->
                <include name="bower_components/jquery/*.min.*"/>

                <!--
                    Don't include readmes or demos. We know what the api we use does.
                    Also Don't include grunt files (Api builders)
                    Just include licenses just in case some require a license to be copied over.
                -->
                <exclude name="**/Gruntfile.js" />
                <exclude name="**/*README*" />
                <exclude name="**/*demo*.*" />
                <exclude name="**/*TEST*" />
                <include name="**/*LICENSE*" />
			</fileset>
		</copy>
		
		<echo message="Web files filtering complete..."/>
	</target>

	<!-- Append Jenkins build number. -->
	<target name="addJenkinsBuild" depends="compile">
		<replaceregexp file="plugin.yml" match="^version: ([^ ]*)( DEV)$" replace="version: \1 build ${env.BUILD_NUMBER}" byline="true"/>
	</target>
	
	<!-- Slap the JAR together. -->
	<target name="jar" depends="addJenkinsBuild" description="Pack JAR file">
		<jar destfile="${env.JOB_NAME}.jar" update="no">
			<fileset dir="${buildFolder}" />
			<fileset dir="." includes="plugin.yml"/>
			<manifest>
				<attribute name="Job" value="${env.JOB_NAME}"/>
				<attribute name="Built-By" value="ModDamage Jenkins"/>
				<!-- <attribute name="Version" value="${version}"/> -->
				<attribute name="Build" value="${env.BUILD_NUMBER}"/> 
			</manifest>
		</jar>
	</target>

    <!-- Made the JAR, so get rid of the excess .class files. -->
	<target name="clean" depends="jar">
		<echo message="Deleting .class files..."/>
		<delete dir="${buildFolder}"/>
		<echo message="Deleting compiled web files..."/>
		<delete dir="${webBuildFolder}"/>
	</target>
	
</project>
